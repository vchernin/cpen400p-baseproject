name: CI

on:
  pull_request:
  push:
    branches:
      - master

# ensure previous runs are cancelled when we push something new to save action time
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  container-build:
    name: Container build
    runs-on: ubuntu-20.04
    permissions:
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0

      # build the container using buildx so it can be cached 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: vchernin
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (pull request)
        uses: docker/build-push-action@v4.0.0
        if: github.event_name == 'pull_request'
        with:
          push: false
          tags: ghcr.io/vchernin/cpen400p-baseproject:latest
          cache-from: type=gha
          # don't set cache-to as it will be evicted too easily due to the 10 GB limit (and github actions cache doesn't let pull requests preserve much for caching)

      # the package itself must allow the repo running this workflow to write to it so the image can be pushed
      - name: Build and push Docker image (push to master)
        uses: docker/build-push-action@v4.0.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          push: true
          tags: ghcr.io/vchernin/cpen400p-baseproject:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # even though gha cache is only 10 GB, so it will be evicted every time (the image is 5.6 GB), this should still work
          # don't rely on registry cache as that image pushed for caching can't be actually used as a working image at least in podman
